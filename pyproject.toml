[tool.poetry]
name = "pmldl-assignment-1"
version = "0.0.0"
description = ""
authors = ["Egor Machnev <egorikhelp@gmail.com>"]
readme = "README.md"
keywords = []
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
torchvision = "^0.19.1"
torch = "^2.4.1"
numpy = "^2.1.1"
scikit-learn = "^1.5.2"
pandas = "^2.2.3"
matplotlib = "^3.9.2"
tqdm = "^4.66.5"
ipywidgets = "^8.1.5"
fastapi = {extras = ["standard"], version = "^0.115.0"}
streamlit = "^1.39.0"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"    # formatter
ruff = "^0.4.8"      # linter
isort = "^5.13.2"    # imports sorter
ipython = "^8.25.0"  # interactive shell
bandit = "^1.7.9"    # security checker
mypy = "^1.10.0"
pyright = "^1.1.371"
icecream = "^2.1.3"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.2"
pytest-sugar = "^1.0.0"
pytest-cov = "^5.0.0"
pytest-async = "^0.1.1"
pytest-aio = "^1.8.1"
pytest-xdist = "^3.6.1"
polyfactory = "^2.16.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.pyright]
venvPath = "." # pyright lsp support
venv = ".venv"

[tool.ruff]
exclude = [".mypy_cache", ".ruff_cache", ".venv", "venv", "build", "dist"]
line-length = 88
indent-width = 4
target-version = "py312"
fix = true

[tool.ruff.lint]
select = ["E", "F", "Q", "B", "I", "UP", "C"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.isort]
case-sensitive = true
force-single-line = false

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = []
